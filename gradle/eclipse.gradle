apply plugin: 'eclipse'
    
eclipse {

    project {
        file {
            // closure executed after .project content is loaded from existing file
            // and before gradle build information is merged
            beforeMerged { project ->
                project.natures.clear()
                project.buildCommands.clear()
            }
            
            project.natures += 'org.eclipse.buildship.core.gradleprojectnature'
            project.buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
            
            if (project.name.startsWith('org.jgrapes.')) {
                project.buildCommand 'org.eclipse.jdt.core.javabuilder'
                project.natures += 'net.sf.eclipsecs.core.CheckstyleNature'
                project.buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
                project.natures += 'ch.acanda.eclipse.pmd.builder.PMDNature'
                project.buildCommand 'ch.acanda.eclipse.pmd.builder.PMDBuilder'
            }
        }
    }
    
    if (plugins.hasPlugin('biz.aQute.bnd.builder')) {
        classpath {
            downloadJavadoc = true
            downloadSources = true
        }
    
        jdt {
            file {
                withProperties { properties ->
                    def formatterPrefs = new Properties()
                    rootProject.file("gradle/org.eclipse.jdt.core.formatter.prefs")
                        .withInputStream { formatterPrefs.load(it) }
                    properties.putAll(formatterPrefs)
                }
            }
        }
    }
}

tasks.eclipse.dependsOn(cleanEclipse)

